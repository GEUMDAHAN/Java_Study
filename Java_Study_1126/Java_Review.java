package Java_Study_1126;

public class Java_Review {

	public static void main(String[] args) {
		
		// for문(반복문)의 기본형태
		for (int i = 0; i < 3; i++) {
			System.out.println("Hello World!");
		}
		
		
		/*
		 * 문제 7.
		 * 1부터 100까지의 숫자 중 3의 배수는 "Fizz", 5의 배수는 "Buzz",
		 * 3과 5의 공배수는 "FizzBuzz"를 출력하고,
		 * 나머지 숫자는 그대로 출력하는 프로그램을 작성하세요.
		 * (범위가 정해져있을 시 for문, 정해져 있지 않을 시 while문)
		 */
		
		for (int i = 1; i <= 100; i++) {
			if (i % 3 == 0 && i % 5 == 0) {
				System.out.println("FizzBuzz");
			} else if (i % 3 == 0) {
				System.out.println("Fizz");
			} else if (i % 5 == 0) {
				System.out.println("Buzz");
			}
		}
		
		
		/*
		 * 문제 11.
		 * 어떤 세균은 1시간에 두 배 만큼 증식한다고 합니다.
		 * 처음 세균의 마리 수 n과 경과한 시간 t가 변수로 주어질 때,
		 * t시간 후 세균의 수를 출력하세요.
		 * 
		 * int n = 2;
		 * int t = 10;
		 * 
		 * 예) 처음엔 2마리, 1시간 후엔 4마리, 2시간 후엔 8마리...
		 * 10시간 후엔 2048마리가 됩니다. 따라서 2048을 출력합니다.
		 */
		
		int n = 2;
		int t = 10;
		// 1시간 부터 10시간이라는 범위가 정해짐 → for문
		
		for (int i = 1; i <= t; i++) { // 10번 실행!
			n = n * 2;
			// n *= 2;
		}
		
		
		/*
		 * 문제 12.
		 * 1937년 Collatz란 사람에 의해 제기된 이 추측은,
		 * 주어진 수가 1이 될 때까지 다음 작업을 반복하면,
		 * 모든 수를 1로 만들 수 있다는 추측입니다.
		 * 작업은 다음과 같습니다.
		 * 
		 * 1-1. 입력된 수가 짝수라면 2로 나눕니다.
		 * 1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.
		 * 2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
		 * 
		 * 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1
		 * 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야 하는 지 출력하세요.
		 * 
		 * int m = 6; // 주어진 수
		 */
		
		// 범위가 정해져있지 않으니 while문 사용
		int count = 0; // 몇 번 반복하는지 체크하는 변수
		int n2 = 6;
		
		while (n2 != 1) { // n2가 1이 될 때까지 계속 반복함!
			if (n2 % 2 == 0) { // 짝수라면?
				n2 = n2 / 2; // 짝수라면 2로 나눈다.
				++count;
			} else { // 짝수가 아니라면?
				n2 = n2 * 3 + 1; // 3을 곱하고 1을 더한다.
				++count;		
			}
		}
		System.out.println("count : " +count);
		

	}

}
